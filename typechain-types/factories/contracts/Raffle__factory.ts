/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Raffle, RaffleInterface } from "../../contracts/Raffle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entranceFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "coordinator",
        type: "address",
      },
    ],
    name: "OnlyOwnerOrCoordinator",
    type: "error",
  },
  {
    inputs: [],
    name: "Raffle_WinnerIsNotSelectedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "Raffle__RaffleNotOpen",
    type: "error",
  },
  {
    inputs: [],
    name: "Raffle__SendMoreToEnterRaffle",
    type: "error",
  },
  {
    inputs: [],
    name: "Raffle__TransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numPlayers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "raffleState",
        type: "uint256",
      },
    ],
    name: "Raffle__UpkeepNotNeeded",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
    ],
    name: "CoordinatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "RaffleEnter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "numWords",
        type: "uint32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "RequestedRaffleWinner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "WinnerPicked",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "callbackGasLimit",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enterRaffle",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntranceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getPlayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRaffleState",
    outputs: [
      {
        internalType: "enum Raffle.RaffleState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRecentWinner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequestConfirmations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRequestStatus",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numWords",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payLatestWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_requests",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_subscriptionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_vrfCoordinator",
    outputs: [
      {
        internalType: "contract IVRFCoordinatorV2Plus",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
    ],
    name: "setCoordinator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040527f787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae60001b600955620186a0600a60006101000a81548163ffffffff021916908363ffffffff1602179055506001600a60046101000a81548163ffffffff021916908363ffffffff16021790555034801561007d57600080fd5b50604051612dc5380380612dc5833981810160405281019061009f9190610458565b80338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610112576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101099061051c565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610196576101958161029360201b60201c565b5b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101ff576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508160808181525050826004819055508360a081815250506000600860006101000a81548160ff0219169083600181111561027e5761027d61053c565b5b021790555042600581905550505050506105d7565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f8906105b7565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b6000819050919050565b6103d7816103c4565b81146103e257600080fd5b50565b6000815190506103f4816103ce565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610425826103fa565b9050919050565b6104358161041a565b811461044057600080fd5b50565b6000815190506104528161042c565b92915050565b60008060008060808587031215610472576104716103bf565b5b6000610480878288016103e5565b9450506020610491878288016103e5565b93505060406104a2878288016103e5565b92505060606104b387828801610443565b91505092959194509250565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006105066018836104bf565b9150610511826104d0565b602082019050919050565b60006020820190508181036000830152610535816104f9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105a16017836104bf565b91506105ac8261056b565b602082019050919050565b600060208201905081810360008301526105d081610594565b9050919050565b60805160a0516127bb61060a600039600081816105f4015261070d015260008181610c0e015261109601526127bb6000f3fe6080604052600436106101815760003560e01c80638ac00021116100d1578063c1c244e81161008a578063e55ae4e811610064578063e55ae4e814610534578063f2fde38b14610571578063fc2a88c31461059a578063fd6673f5146105c557610181565b8063c1c244e8146104b4578063cd231e54146104df578063d8a4676f146104f657610181565b80638ac00021146103a15780638da5cb5b146103cc5780638ea98117146103f757806391ad27b4146104205780639eccacf61461044b578063a168fa891461047657610181565b8063473f1ddc1161013e5780636e04ff0d116101185780636e04ff0d146102e457806379ba5097146103225780637ccfd7fc146103395780638796ba8c1461036457610181565b8063473f1ddc146102635780635f1b0fd81461028e57806361728f39146102b957610181565b806309bc33a714610186578063115cbaf5146101b15780631fe543e3146101dc57806324f74697146102055780632cfcc539146102305780634585e33b1461023a575b600080fd5b34801561019257600080fd5b5061019b6105f0565b6040516101a89190611a17565b60405180910390f35b3480156101bd57600080fd5b506101c6610618565b6040516101d39190611aa9565b60405180910390f35b3480156101e857600080fd5b5061020360048036038101906101fe9190611b69565b61062f565b005b34801561021157600080fd5b5061021a6106f5565b6040516102279190611be8565b60405180910390f35b61023861070b565b005b34801561024657600080fd5b50610261600480360381019061025c9190611c59565b61087a565b005b34801561026f57600080fd5b50610278610b8e565b6040516102859190611ce7565b60405180910390f35b34801561029a57600080fd5b506102a3610bb8565b6040516102b09190611a17565b60405180910390f35b3480156102c557600080fd5b506102ce610bc5565b6040516102db9190611d1b565b60405180910390f35b3480156102f057600080fd5b5061030b60048036038101906103069190611e77565b610bcb565b604051610319929190611f5a565b60405180910390f35b34801561032e57600080fd5b50610337610cb3565b005b34801561034557600080fd5b5061034e610e48565b60405161035b9190611be8565b60405180910390f35b34801561037057600080fd5b5061038b60048036038101906103869190611f8a565b610e5e565b6040516103989190611a17565b60405180910390f35b3480156103ad57600080fd5b506103b6610e82565b6040516103c39190611a17565b60405180910390f35b3480156103d857600080fd5b506103e1610e88565b6040516103ee9190611ce7565b60405180910390f35b34801561040357600080fd5b5061041e60048036038101906104199190611fe3565b610eb1565b005b34801561042c57600080fd5b50610435611092565b6040516104429190611a17565b60405180910390f35b34801561045757600080fd5b506104606110ba565b60405161046d919061206f565b60405180910390f35b34801561048257600080fd5b5061049d60048036038101906104989190611f8a565b6110e0565b6040516104ab92919061208a565b60405180910390f35b3480156104c057600080fd5b506104c961111e565b6040516104d69190611a17565b60405180910390f35b3480156104eb57600080fd5b506104f4611128565b005b34801561050257600080fd5b5061051d60048036038101906105189190611f8a565b6113d7565b60405161052b929190612171565b60405180910390f35b34801561054057600080fd5b5061055b60048036038101906105569190611f8a565b611502565b6040516105689190611ce7565b60405180910390f35b34801561057d57600080fd5b5061059860048036038101906105939190611fe3565b61154a565b005b3480156105a657600080fd5b506105af61155e565b6040516105bc9190611a17565b60405180910390f35b3480156105d157600080fd5b506105da611564565b6040516105e79190611a17565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600860009054906101000a900460ff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106e55733600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016106dc9291906121a1565b60405180910390fd5b6106f0838383611571565b505050565b600a60009054906101000a900463ffffffff1681565b7f0000000000000000000000000000000000000000000000000000000000000000341015610765576040517f3038c00a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600181111561077957610778611a32565b5b600860009054906101000a900460ff16600181111561079b5761079a611a32565b5b146107d2576040517fd24a271400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d460405160405180910390a2565b600061089460405180602001604052806000815250610bcb565b509050806109035747600780549050600860009054906101000a900460ff1660018111156108c5576108c4611a32565b5b6040517f584327aa0000000000000000000000000000000000000000000000000000000081526004016108fa939291906121ca565b60405180910390fd5b6001600860006101000a81548160ff0219169083600181111561092957610928611a32565b5b02179055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639b1c385e6040518060c0016040528060095481526020016004548152602001600361ffff168152602001600a60009054906101000a900463ffffffff1663ffffffff168152602001600a60049054906101000a900463ffffffff1663ffffffff1681526020016109ea604051806020016040528060011515815250611669565b8152506040518263ffffffff1660e01b8152600401610a09919061230f565b6020604051808303816000875af1158015610a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4c9190612346565b905080600c81905550600b8190806001815401808255809150506001900390600052602060002001600090919091909150556040518060600160405280600015158152602001600115158152602001600067ffffffffffffffff811115610ab657610ab5611d4c565b5b604051908082528060200260200182016040528015610ae45781602001602082028036833780820191505090505b508152506003600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff0219169083151502179055506040820151816001019080519060200190610b579291906118bd565b50905050807fcd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b60405160405180910390a250505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600361ffff16905090565b60095481565b600060606000600860009054906101000a900460ff166001811115610bf357610bf2611a32565b5b60006001811115610c0757610c06611a32565b5b14905060007f000000000000000000000000000000000000000000000000000000000000000060055442610c3b91906123a2565b11905060008060078054905011905060008047119050828015610c5b5750835b8015610c645750805b8015610c6d5750815b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3a90612433565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600a60049054906101000a900463ffffffff1681565b600b8181548110610e6e57600080fd5b906000526020600020016000915090505481565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610eb9610e88565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610f425750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610fb15733610f50610e88565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f061db9c1000000000000000000000000000000000000000000000000000000008152600401610fa893929190612453565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611017576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be6816040516110879190611ce7565b60405180910390a150565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b6000600554905090565b6000600c54148061115c575060036000600c54815260200190815260200160002060000160009054906101000a900460ff16155b15611193576040517f46e9e86100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006007808054905060036000600c5481526020019081526020016000206001016000815481106111c7576111c661248a565b5b90600052602060002001546111dc91906124e8565b815481106111ed576111ec61248a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600067ffffffffffffffff81111561127657611275611d4c565b5b6040519080825280602002602001820160405280156112a45781602001602082028036833780820191505090505b50600790805190602001906112ba92919061190a565b506000600860006101000a81548160ff021916908360018111156112e1576112e0611a32565b5b02179055504260058190555060008173ffffffffffffffffffffffffffffffffffffffff16476040516113139061254a565b60006040518083038185875af1925050503d8060008114611350576040519150601f19603f3d011682016040523d82523d6000602084013e611355565b606091505b5050905080611390576040517fa1d04b3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df60405160405180910390a25050565b600060606003600084815260200190815260200160002060000160019054906101000a900460ff1661143e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611435906125ab565b60405180910390fd5b6000600360008581526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff16151515158152602001600182018054806020026020016040519081016040528092919081815260200182805480156114e357602002820191906000526020600020905b8154815260200190600101908083116114cf575b5050505050815250509050806000015181604001519250925050915091565b6000600782815481106115185761151761248a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b611552611701565b61155b81611791565b50565b600c5481565b6000600780549050905090565b6003600084815260200190815260200160002060000160019054906101000a900460ff166115d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115cb906125ab565b60405180910390fd5b60016003600085815260200190815260200160002060000160006101000a81548160ff0219169083151502179055508181600360008681526020019081526020016000206001019190611628929190611994565b507ffe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d83838360405161165c93929190612635565b60405180910390a1505050565b60607f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa8260405160240161169d9190612692565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461178f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611786906126f9565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f690612765565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b8280548282559060005260206000209081019282156118f9579160200282015b828111156118f85782518255916020019190600101906118dd565b5b50905061190691906119e1565b5090565b828054828255906000526020600020908101928215611983579160200282015b828111156119825782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061192a565b5b50905061199091906119e1565b5090565b8280548282559060005260206000209081019282156119d0579160200282015b828111156119cf5782358255916020019190600101906119b4565b5b5090506119dd91906119e1565b5090565b5b808211156119fa5760008160009055506001016119e2565b5090565b6000819050919050565b611a11816119fe565b82525050565b6000602082019050611a2c6000830184611a08565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611a7257611a71611a32565b5b50565b6000819050611a8382611a61565b919050565b6000611a9382611a75565b9050919050565b611aa381611a88565b82525050565b6000602082019050611abe6000830184611a9a565b92915050565b6000604051905090565b600080fd5b600080fd5b611ae1816119fe565b8114611aec57600080fd5b50565b600081359050611afe81611ad8565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611b2957611b28611b04565b5b8235905067ffffffffffffffff811115611b4657611b45611b09565b5b602083019150836020820283011115611b6257611b61611b0e565b5b9250929050565b600080600060408486031215611b8257611b81611ace565b5b6000611b9086828701611aef565b935050602084013567ffffffffffffffff811115611bb157611bb0611ad3565b5b611bbd86828701611b13565b92509250509250925092565b600063ffffffff82169050919050565b611be281611bc9565b82525050565b6000602082019050611bfd6000830184611bd9565b92915050565b60008083601f840112611c1957611c18611b04565b5b8235905067ffffffffffffffff811115611c3657611c35611b09565b5b602083019150836001820283011115611c5257611c51611b0e565b5b9250929050565b60008060208385031215611c7057611c6f611ace565b5b600083013567ffffffffffffffff811115611c8e57611c8d611ad3565b5b611c9a85828601611c03565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cd182611ca6565b9050919050565b611ce181611cc6565b82525050565b6000602082019050611cfc6000830184611cd8565b92915050565b6000819050919050565b611d1581611d02565b82525050565b6000602082019050611d306000830184611d0c565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d8482611d3b565b810181811067ffffffffffffffff82111715611da357611da2611d4c565b5b80604052505050565b6000611db6611ac4565b9050611dc28282611d7b565b919050565b600067ffffffffffffffff821115611de257611de1611d4c565b5b611deb82611d3b565b9050602081019050919050565b82818337600083830152505050565b6000611e1a611e1584611dc7565b611dac565b905082815260208101848484011115611e3657611e35611d36565b5b611e41848285611df8565b509392505050565b600082601f830112611e5e57611e5d611b04565b5b8135611e6e848260208601611e07565b91505092915050565b600060208284031215611e8d57611e8c611ace565b5b600082013567ffffffffffffffff811115611eab57611eaa611ad3565b5b611eb784828501611e49565b91505092915050565b60008115159050919050565b611ed581611ec0565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f15578082015181840152602081019050611efa565b60008484015250505050565b6000611f2c82611edb565b611f368185611ee6565b9350611f46818560208601611ef7565b611f4f81611d3b565b840191505092915050565b6000604082019050611f6f6000830185611ecc565b8181036020830152611f818184611f21565b90509392505050565b600060208284031215611fa057611f9f611ace565b5b6000611fae84828501611aef565b91505092915050565b611fc081611cc6565b8114611fcb57600080fd5b50565b600081359050611fdd81611fb7565b92915050565b600060208284031215611ff957611ff8611ace565b5b600061200784828501611fce565b91505092915050565b6000819050919050565b600061203561203061202b84611ca6565b612010565b611ca6565b9050919050565b60006120478261201a565b9050919050565b60006120598261203c565b9050919050565b6120698161204e565b82525050565b60006020820190506120846000830184612060565b92915050565b600060408201905061209f6000830185611ecc565b6120ac6020830184611ecc565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6120e8816119fe565b82525050565b60006120fa83836120df565b60208301905092915050565b6000602082019050919050565b600061211e826120b3565b61212881856120be565b9350612133836120cf565b8060005b8381101561216457815161214b88826120ee565b975061215683612106565b925050600181019050612137565b5085935050505092915050565b60006040820190506121866000830185611ecc565b81810360208301526121988184612113565b90509392505050565b60006040820190506121b66000830185611cd8565b6121c36020830184611cd8565b9392505050565b60006060820190506121df6000830186611a08565b6121ec6020830185611a08565b6121f96040830184611a08565b949350505050565b61220a81611d02565b82525050565b600061ffff82169050919050565b61222781612210565b82525050565b61223681611bc9565b82525050565b600082825260208201905092915050565b600061225882611edb565b612262818561223c565b9350612272818560208601611ef7565b61227b81611d3b565b840191505092915050565b600060c08301600083015161229e6000860182612201565b5060208301516122b160208601826120df565b5060408301516122c4604086018261221e565b5060608301516122d7606086018261222d565b5060808301516122ea608086018261222d565b5060a083015184820360a0860152612302828261224d565b9150508091505092915050565b600060208201905081810360008301526123298184612286565b905092915050565b60008151905061234081611ad8565b92915050565b60006020828403121561235c5761235b611ace565b5b600061236a84828501612331565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123ad826119fe565b91506123b8836119fe565b92508282039050818111156123d0576123cf612373565b5b92915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b600061241d6016836123d6565b9150612428826123e7565b602082019050919050565b6000602082019050818103600083015261244c81612410565b9050919050565b60006060820190506124686000830186611cd8565b6124756020830185611cd8565b6124826040830184611cd8565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006124f3826119fe565b91506124fe836119fe565b92508261250e5761250d6124b9565b5b828206905092915050565b600081905092915050565b50565b6000612534600083612519565b915061253f82612524565b600082019050919050565b600061255582612527565b9150819050919050565b7f72657175657374206e6f7420666f756e64000000000000000000000000000000600082015250565b60006125956011836123d6565b91506125a08261255f565b602082019050919050565b600060208201905081810360008301526125c481612588565b9050919050565b600080fd5b82818337505050565b60006125e583856120be565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115612618576126176125cb565b5b6020830292506126298385846125d0565b82840190509392505050565b600060408201905061264a6000830186611a08565b818103602083015261265d8184866125d9565b9050949350505050565b61267081611ec0565b82525050565b60208201600082015161268c6000850182612667565b50505050565b60006020820190506126a76000830184612676565b92915050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006126e36016836123d6565b91506126ee826126ad565b602082019050919050565b60006020820190508181036000830152612712816126d6565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b600061274f6017836123d6565b915061275a82612719565b602082019050919050565b6000602082019050818103600083015261277e81612742565b905091905056fea26469706673582212206c11bb77dfcdec3f45e9a856b21504572f88c0cff2daae181e5973007bcda7dc64736f6c634300081c0033";

type RaffleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RaffleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Raffle__factory extends ContractFactory {
  constructor(...args: RaffleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    entranceFee: BigNumberish,
    subscriptionId: BigNumberish,
    interval: BigNumberish,
    _vrfCoordinator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      entranceFee,
      subscriptionId,
      interval,
      _vrfCoordinator,
      overrides || {}
    );
  }
  override deploy(
    entranceFee: BigNumberish,
    subscriptionId: BigNumberish,
    interval: BigNumberish,
    _vrfCoordinator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      entranceFee,
      subscriptionId,
      interval,
      _vrfCoordinator,
      overrides || {}
    ) as Promise<
      Raffle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Raffle__factory {
    return super.connect(runner) as Raffle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RaffleInterface {
    return new Interface(_abi) as RaffleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Raffle {
    return new Contract(address, _abi, runner) as unknown as Raffle;
  }
}
