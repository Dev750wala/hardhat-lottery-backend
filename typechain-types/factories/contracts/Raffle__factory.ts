/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Raffle, RaffleInterface } from "../../contracts/Raffle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entranceFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "coordinator",
        type: "address",
      },
    ],
    name: "OnlyOwnerOrCoordinator",
    type: "error",
  },
  {
    inputs: [],
    name: "Raffle__RaffleNotOpen",
    type: "error",
  },
  {
    inputs: [],
    name: "Raffle__SendMoreToEnterRaffle",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numPlayers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "raffleState",
        type: "uint256",
      },
    ],
    name: "Raffle__UpkeepNotNeeded",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
    ],
    name: "CoordinatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "RaffleEnter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "numWords",
        type: "uint32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "RequestedRaffleWinner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "WinnerPicked",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "callbackGasLimit",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enterRaffle",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntranceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getPlayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRaffleState",
    outputs: [
      {
        internalType: "enum Raffle.RaffleState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRecentWinner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequestConfirmations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "keyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numWords",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_requests",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_subscriptionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_vrfCoordinator",
    outputs: [
      {
        internalType: "contract IVRFCoordinatorV2Plus",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
    ],
    name: "setCoordinator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040527f787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae60001b600955620186a0600a60006101000a81548163ffffffff021916908363ffffffff1602179055506001600a60046101000a81548163ffffffff021916908363ffffffff16021790555034801561007d57600080fd5b50604051612ef2380380612ef2833981810160405281019061009f9190610458565b80338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610112576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101099061051c565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610196576101958161029360201b60201c565b5b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101ff576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508160808181525050826004819055508360a081815250506000600860006101000a81548160ff0219169083600181111561027e5761027d61053c565b5b021790555042600581905550505050506105d7565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f8906105b7565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b6000819050919050565b6103d7816103c4565b81146103e257600080fd5b50565b6000815190506103f4816103ce565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610425826103fa565b9050919050565b6104358161041a565b811461044057600080fd5b50565b6000815190506104528161042c565b92915050565b60008060008060808587031215610472576104716103bf565b5b6000610480878288016103e5565b9450506020610491878288016103e5565b93505060406104a2878288016103e5565b92505060606104b387828801610443565b91505092959194509250565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006105066018836104bf565b9150610511826104d0565b602082019050919050565b60006020820190508181036000830152610535816104f9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105a16017836104bf565b91506105ac8261056b565b602082019050919050565b600060208201905081810360008301526105d081610594565b9050919050565b60805160a0516128e861060a600039600081816105690152610682015260008181610b96015261101e01526128e86000f3fe60806040526004361061014b5760003560e01c80638796ba8c116100b6578063a168fa891161006f578063a168fa8914610440578063c1c244e81461047e578063e55ae4e8146104a9578063f2fde38b146104e6578063fc2a88c31461050f578063fd6673f51461053a5761014b565b80638796ba8c1461032e5780638ac000211461036b5780638da5cb5b146103965780638ea98117146103c157806391ad27b4146103ea5780639eccacf6146104155761014b565b8063473f1ddc11610108578063473f1ddc1461022d5780635f1b0fd81461025857806361728f39146102835780636e04ff0d146102ae57806379ba5097146102ec5780637ccfd7fc146103035761014b565b806309bc33a714610150578063115cbaf51461017b5780631fe543e3146101a657806324f74697146101cf5780632cfcc539146101fa5780634585e33b14610204575b600080fd5b34801561015c57600080fd5b50610165610565565b604051610172919061193b565b60405180910390f35b34801561018757600080fd5b5061019061058d565b60405161019d91906119cd565b60405180910390f35b3480156101b257600080fd5b506101cd60048036038101906101c89190611a8d565b6105a4565b005b3480156101db57600080fd5b506101e461066a565b6040516101f19190611b0c565b60405180910390f35b610202610680565b005b34801561021057600080fd5b5061022b60048036038101906102269190611b7d565b6107ef565b005b34801561023957600080fd5b50610242610b16565b60405161024f9190611c0b565b60405180910390f35b34801561026457600080fd5b5061026d610b40565b60405161027a919061193b565b60405180910390f35b34801561028f57600080fd5b50610298610b4d565b6040516102a59190611c3f565b60405180910390f35b3480156102ba57600080fd5b506102d560048036038101906102d09190611d9b565b610b53565b6040516102e3929190611e7e565b60405180910390f35b3480156102f857600080fd5b50610301610c3b565b005b34801561030f57600080fd5b50610318610dd0565b6040516103259190611b0c565b60405180910390f35b34801561033a57600080fd5b5061035560048036038101906103509190611eae565b610de6565b604051610362919061193b565b60405180910390f35b34801561037757600080fd5b50610380610e0a565b60405161038d919061193b565b60405180910390f35b3480156103a257600080fd5b506103ab610e10565b6040516103b89190611c0b565b60405180910390f35b3480156103cd57600080fd5b506103e860048036038101906103e39190611f07565b610e39565b005b3480156103f657600080fd5b506103ff61101a565b60405161040c919061193b565b60405180910390f35b34801561042157600080fd5b5061042a611042565b6040516104379190611f93565b60405180910390f35b34801561044c57600080fd5b5061046760048036038101906104629190611eae565b611068565b604051610475929190611fae565b60405180910390f35b34801561048a57600080fd5b506104936110a6565b6040516104a0919061193b565b60405180910390f35b3480156104b557600080fd5b506104d060048036038101906104cb9190611eae565b6110b0565b6040516104dd9190611c0b565b60405180910390f35b3480156104f257600080fd5b5061050d60048036038101906105089190611f07565b6110f8565b005b34801561051b57600080fd5b5061052461110c565b604051610531919061193b565b60405180910390f35b34801561054657600080fd5b5061054f611112565b60405161055c919061193b565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600860009054906101000a900460ff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065a5733600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f1cf993f4000000000000000000000000000000000000000000000000000000008152600401610651929190611fd7565b60405180910390fd5b61066583838361111f565b505050565b600a60009054906101000a900463ffffffff1681565b7f00000000000000000000000000000000000000000000000000000000000000003410156106da576040517f3038c00a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018111156106ee576106ed611956565b5b600860009054906101000a900460ff1660018111156107105761070f611956565b5b14610747576040517fd24a271400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d460405160405180910390a2565b600061080960405180602001604052806000815250610b53565b5090506000838381019061081d919061202c565b90508161088b5747600780549050600860009054906101000a900460ff16600181111561084d5761084c611956565b5b6040517f584327aa00000000000000000000000000000000000000000000000000000000815260040161088293929190612059565b60405180910390fd5b6001600860006101000a81548160ff021916908360018111156108b1576108b0611956565b5b02179055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639b1c385e6040518060c0016040528060095481526020016004548152602001600361ffff168152602001600a60009054906101000a900463ffffffff1663ffffffff168152602001600a60049054906101000a900463ffffffff1663ffffffff1681526020016109716040518060200160405280881515815250611492565b8152506040518263ffffffff1660e01b815260040161099091906121ad565b6020604051808303816000875af11580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d391906121e4565b905080600c81905550600b8190806001815401808255809150506001900390600052602060002001600090919091909150556040518060600160405280600015158152602001600115158152602001600067ffffffffffffffff811115610a3d57610a3c611c70565b5b604051908082528060200260200182016040528015610a6b5781602001602082028036833780820191505090505b508152506003600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff0219169083151502179055506040820151816001019080519060200190610ade929190611861565b50905050807fcd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b60405160405180910390a25050505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600361ffff16905090565b60095481565b600060606000600860009054906101000a900460ff166001811115610b7b57610b7a611956565b5b60006001811115610b8f57610b8e611956565b5b14905060007f000000000000000000000000000000000000000000000000000000000000000060055442610bc39190612240565b11905060008060078054905011905060008047119050828015610be35750835b8015610bec5750805b8015610bf55750815b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc2906122d1565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600a60049054906101000a900463ffffffff1681565b600b8181548110610df657600080fd5b906000526020600020016000915090505481565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610e41610e10565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610eca5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610f395733610ed8610e10565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f061db9c1000000000000000000000000000000000000000000000000000000008152600401610f30939291906122f1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f9f576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be68160405161100f9190611c0b565b60405180910390a150565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b6000600554905090565b6000600782815481106110c6576110c5612328565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61110061152a565b611109816115ba565b50565b600c5481565b6000600780549050905090565b7fff7c98e81090334399edd7d6c35098c6b2d2596391ad2352a1908c2849efd1b260405160405180910390a161116c6040518060a00160405280606381526020016127ed606391396116e6565b61118d6040518060a00160405280606381526020016125fe606391396116e6565b60016003600085815260200190815260200160002060000160006101000a81548160ff02191690831515021790555081816003600086815260200190815260200160002060010191906111e19291906118ae565b506112036040518060a0016040528060638152602001612661606391396116e6565b600060078080549050848460008181106112205761121f612328565b5b905060200201356112319190612386565b8154811061124257611241612328565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506112906040518060a00160405280606381526020016126c4606391396116e6565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506112f26040518060a00160405280606381526020016126c4606391396116e6565b6113136040518060a00160405280606381526020016126c4606391396116e6565b6113346040518060a00160405280606381526020016126c4606391396116e6565b6113556040518060a00160405280606381526020016126c4606391396116e6565b6113766040518060a00160405280606381526020016126c4606391396116e6565b6113976040518060a00160405280606381526020016126c4606391396116e6565b6113b86040518060a0016040528060638152602001612850606391396116e6565b6000600860006101000a81548160ff021916908360018111156113de576113dd611956565b5b02179055506114226040518060400160405280601281526020017f57696e6e657220416464726573733a20257300000000000000000000000000008152508261177f565b6114436040518060a0016040528060638152602001612727606391396116e6565b4260058190555061146b6040518060a001604052806063815260200161278a606391396116e6565b61148c6040518060a001604052806063815260200161259b606391396116e6565b50505050565b60607f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa826040516024016114c691906123e2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115af90612449565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611628576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161f906124b5565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b61177c816040516024016116fa9190612519565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061181b565b50565b611817828260405160240161179592919061253b565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061181b565b5050565b6118328161182a611835611856565b63ffffffff16565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6118fb819050919050565b82805482825590600052602060002090810192821561189d579160200282015b8281111561189c578251825591602001919060010190611881565b5b5090506118aa9190611905565b5090565b8280548282559060005260206000209081019282156118ea579160200282015b828111156118e95782358255916020019190600101906118ce565b5b5090506118f79190611905565b5090565b61190361256b565b565b5b8082111561191e576000816000905550600101611906565b5090565b6000819050919050565b61193581611922565b82525050565b6000602082019050611950600083018461192c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061199657611995611956565b5b50565b60008190506119a782611985565b919050565b60006119b782611999565b9050919050565b6119c7816119ac565b82525050565b60006020820190506119e260008301846119be565b92915050565b6000604051905090565b600080fd5b600080fd5b611a0581611922565b8114611a1057600080fd5b50565b600081359050611a22816119fc565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611a4d57611a4c611a28565b5b8235905067ffffffffffffffff811115611a6a57611a69611a2d565b5b602083019150836020820283011115611a8657611a85611a32565b5b9250929050565b600080600060408486031215611aa657611aa56119f2565b5b6000611ab486828701611a13565b935050602084013567ffffffffffffffff811115611ad557611ad46119f7565b5b611ae186828701611a37565b92509250509250925092565b600063ffffffff82169050919050565b611b0681611aed565b82525050565b6000602082019050611b216000830184611afd565b92915050565b60008083601f840112611b3d57611b3c611a28565b5b8235905067ffffffffffffffff811115611b5a57611b59611a2d565b5b602083019150836001820283011115611b7657611b75611a32565b5b9250929050565b60008060208385031215611b9457611b936119f2565b5b600083013567ffffffffffffffff811115611bb257611bb16119f7565b5b611bbe85828601611b27565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bf582611bca565b9050919050565b611c0581611bea565b82525050565b6000602082019050611c206000830184611bfc565b92915050565b6000819050919050565b611c3981611c26565b82525050565b6000602082019050611c546000830184611c30565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611ca882611c5f565b810181811067ffffffffffffffff82111715611cc757611cc6611c70565b5b80604052505050565b6000611cda6119e8565b9050611ce68282611c9f565b919050565b600067ffffffffffffffff821115611d0657611d05611c70565b5b611d0f82611c5f565b9050602081019050919050565b82818337600083830152505050565b6000611d3e611d3984611ceb565b611cd0565b905082815260208101848484011115611d5a57611d59611c5a565b5b611d65848285611d1c565b509392505050565b600082601f830112611d8257611d81611a28565b5b8135611d92848260208601611d2b565b91505092915050565b600060208284031215611db157611db06119f2565b5b600082013567ffffffffffffffff811115611dcf57611dce6119f7565b5b611ddb84828501611d6d565b91505092915050565b60008115159050919050565b611df981611de4565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e39578082015181840152602081019050611e1e565b60008484015250505050565b6000611e5082611dff565b611e5a8185611e0a565b9350611e6a818560208601611e1b565b611e7381611c5f565b840191505092915050565b6000604082019050611e936000830185611df0565b8181036020830152611ea58184611e45565b90509392505050565b600060208284031215611ec457611ec36119f2565b5b6000611ed284828501611a13565b91505092915050565b611ee481611bea565b8114611eef57600080fd5b50565b600081359050611f0181611edb565b92915050565b600060208284031215611f1d57611f1c6119f2565b5b6000611f2b84828501611ef2565b91505092915050565b6000819050919050565b6000611f59611f54611f4f84611bca565b611f34565b611bca565b9050919050565b6000611f6b82611f3e565b9050919050565b6000611f7d82611f60565b9050919050565b611f8d81611f72565b82525050565b6000602082019050611fa86000830184611f84565b92915050565b6000604082019050611fc36000830185611df0565b611fd06020830184611df0565b9392505050565b6000604082019050611fec6000830185611bfc565b611ff96020830184611bfc565b9392505050565b61200981611de4565b811461201457600080fd5b50565b60008135905061202681612000565b92915050565b600060208284031215612042576120416119f2565b5b600061205084828501612017565b91505092915050565b600060608201905061206e600083018661192c565b61207b602083018561192c565b612088604083018461192c565b949350505050565b61209981611c26565b82525050565b6120a881611922565b82525050565b600061ffff82169050919050565b6120c5816120ae565b82525050565b6120d481611aed565b82525050565b600082825260208201905092915050565b60006120f682611dff565b61210081856120da565b9350612110818560208601611e1b565b61211981611c5f565b840191505092915050565b600060c08301600083015161213c6000860182612090565b50602083015161214f602086018261209f565b50604083015161216260408601826120bc565b50606083015161217560608601826120cb565b50608083015161218860808601826120cb565b5060a083015184820360a08601526121a082826120eb565b9150508091505092915050565b600060208201905081810360008301526121c78184612124565b905092915050565b6000815190506121de816119fc565b92915050565b6000602082840312156121fa576121f96119f2565b5b6000612208848285016121cf565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061224b82611922565b915061225683611922565b925082820390508181111561226e5761226d612211565b5b92915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006122bb601683612274565b91506122c682612285565b602082019050919050565b600060208201905081810360008301526122ea816122ae565b9050919050565b60006060820190506123066000830186611bfc565b6123136020830185611bfc565b6123206040830184611bfc565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061239182611922565b915061239c83611922565b9250826123ac576123ab612357565b5b828206905092915050565b6123c081611de4565b82525050565b6020820160008201516123dc60008501826123b7565b50505050565b60006020820190506123f760008301846123c6565b92915050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000612433601683612274565b915061243e826123fd565b602082019050919050565b6000602082019050818103600083015261246281612426565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b600061249f601783612274565b91506124aa82612469565b602082019050919050565b600060208201905081810360008301526124ce81612492565b9050919050565b600081519050919050565b60006124eb826124d5565b6124f58185612274565b9350612505818560208601611e1b565b61250e81611c5f565b840191505092915050565b6000602082019050818103600083015261253381846124e0565b905092915050565b6000604082019050818103600083015261255581856124e0565b90506125646020830184611bfc565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfe232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323383838383838383838383838383838383838383838383838383838383838383838383838383838232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323323232323232323232323232323232323232323232323232323232323232323232323232323232232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323333333333333333333333333333333333333333333333333333333333333333333333333333333232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323343434343434343434343434343434343434343434343434343434343434343434343434343434232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323363636363636363636363636363636363636363636363636363636363636363636363636363636232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323373737373737373737373737373737373737373737373737373737373737373737373737373737232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323313131313131313131313131313131313131313131313131313131313131313131313131313131232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323353535353535353535353535353535353535353535353535353535353535353535353535353535a2646970667358221220e55838bb39cb413c4f90e65cd973f6145133e27737232bcae959dcc36cc3782464736f6c634300081c0033";

type RaffleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RaffleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Raffle__factory extends ContractFactory {
  constructor(...args: RaffleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    entranceFee: BigNumberish,
    subscriptionId: BigNumberish,
    interval: BigNumberish,
    _vrfCoordinator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      entranceFee,
      subscriptionId,
      interval,
      _vrfCoordinator,
      overrides || {}
    );
  }
  override deploy(
    entranceFee: BigNumberish,
    subscriptionId: BigNumberish,
    interval: BigNumberish,
    _vrfCoordinator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      entranceFee,
      subscriptionId,
      interval,
      _vrfCoordinator,
      overrides || {}
    ) as Promise<
      Raffle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Raffle__factory {
    return super.connect(runner) as Raffle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RaffleInterface {
    return new Interface(_abi) as RaffleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Raffle {
    return new Contract(address, _abi, runner) as unknown as Raffle;
  }
}
