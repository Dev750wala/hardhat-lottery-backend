/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Raffle, RaffleInterface } from "../../contracts/Raffle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entranceFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "coordinator",
        type: "address",
      },
    ],
    name: "OnlyOwnerOrCoordinator",
    type: "error",
  },
  {
    inputs: [],
    name: "Raffle_WinnerIsNotSelectedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "Raffle__RaffleNotOpen",
    type: "error",
  },
  {
    inputs: [],
    name: "Raffle__SendMoreToEnterRaffle",
    type: "error",
  },
  {
    inputs: [],
    name: "Raffle__TransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numPlayers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "raffleState",
        type: "uint256",
      },
    ],
    name: "Raffle__UpkeepNotNeeded",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
    ],
    name: "CoordinatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "RaffleEnter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "numWords",
        type: "uint32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "RequestedRaffleWinner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "WinnerPicked",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "callbackGasLimit",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enterRaffle",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntranceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getPlayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRaffleState",
    outputs: [
      {
        internalType: "enum Raffle.RaffleState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRecentWinner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequestConfirmations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "keyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numWords",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_requests",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_subscriptionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_vrfCoordinator",
    outputs: [
      {
        internalType: "contract IVRFCoordinatorV2Plus",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
    ],
    name: "setCoordinator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040527f787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae60001b600955620186a0600a60006101000a81548163ffffffff021916908363ffffffff1602179055506001600a60046101000a81548163ffffffff021916908363ffffffff16021790555034801561007d57600080fd5b50604051612ca5380380612ca5833981810160405281019061009f9190610458565b80338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610112576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101099061051c565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610196576101958161029360201b60201c565b5b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101ff576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508160808181525050826004819055508360a081815250506000600860006101000a81548160ff0219169083600181111561027e5761027d61053c565b5b021790555042600581905550505050506105d7565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f8906105b7565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b6000819050919050565b6103d7816103c4565b81146103e257600080fd5b50565b6000815190506103f4816103ce565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610425826103fa565b9050919050565b6104358161041a565b811461044057600080fd5b50565b6000815190506104528161042c565b92915050565b60008060008060808587031215610472576104716103bf565b5b6000610480878288016103e5565b9450506020610491878288016103e5565b93505060406104a2878288016103e5565b92505060606104b387828801610443565b91505092959194509250565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006105066018836104bf565b9150610511826104d0565b602082019050919050565b60006020820190508181036000830152610535816104f9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105a16017836104bf565b91506105ac8261056b565b602082019050919050565b600060208201905081810360008301526105d081610594565b9050919050565b60805160a05161269b61060a600039600081816105690152610682015260008181610b96015261101e015261269b6000f3fe60806040526004361061014b5760003560e01c80638796ba8c116100b6578063a168fa891161006f578063a168fa8914610440578063c1c244e81461047e578063e55ae4e8146104a9578063f2fde38b146104e6578063fc2a88c31461050f578063fd6673f51461053a5761014b565b80638796ba8c1461032e5780638ac000211461036b5780638da5cb5b146103965780638ea98117146103c157806391ad27b4146103ea5780639eccacf6146104155761014b565b8063473f1ddc11610108578063473f1ddc1461022d5780635f1b0fd81461025857806361728f39146102835780636e04ff0d146102ae57806379ba5097146102ec5780637ccfd7fc146103035761014b565b806309bc33a714610150578063115cbaf51461017b5780631fe543e3146101a657806324f74697146101cf5780632cfcc539146101fa5780634585e33b14610204575b600080fd5b34801561015c57600080fd5b50610165610565565b6040516101729190611976565b60405180910390f35b34801561018757600080fd5b5061019061058d565b60405161019d9190611a08565b60405180910390f35b3480156101b257600080fd5b506101cd60048036038101906101c89190611ac8565b6105a4565b005b3480156101db57600080fd5b506101e461066a565b6040516101f19190611b47565b60405180910390f35b610202610680565b005b34801561021057600080fd5b5061022b60048036038101906102269190611bb8565b6107ef565b005b34801561023957600080fd5b50610242610b16565b60405161024f9190611c46565b60405180910390f35b34801561026457600080fd5b5061026d610b40565b60405161027a9190611976565b60405180910390f35b34801561028f57600080fd5b50610298610b4d565b6040516102a59190611c7a565b60405180910390f35b3480156102ba57600080fd5b506102d560048036038101906102d09190611dd6565b610b53565b6040516102e3929190611eb9565b60405180910390f35b3480156102f857600080fd5b50610301610c3b565b005b34801561030f57600080fd5b50610318610dd0565b6040516103259190611b47565b60405180910390f35b34801561033a57600080fd5b5061035560048036038101906103509190611ee9565b610de6565b6040516103629190611976565b60405180910390f35b34801561037757600080fd5b50610380610e0a565b60405161038d9190611976565b60405180910390f35b3480156103a257600080fd5b506103ab610e10565b6040516103b89190611c46565b60405180910390f35b3480156103cd57600080fd5b506103e860048036038101906103e39190611f42565b610e39565b005b3480156103f657600080fd5b506103ff61101a565b60405161040c9190611976565b60405180910390f35b34801561042157600080fd5b5061042a611042565b6040516104379190611fce565b60405180910390f35b34801561044c57600080fd5b5061046760048036038101906104629190611ee9565b611068565b604051610475929190611fe9565b60405180910390f35b34801561048a57600080fd5b506104936110a6565b6040516104a09190611976565b60405180910390f35b3480156104b557600080fd5b506104d060048036038101906104cb9190611ee9565b6110b0565b6040516104dd9190611c46565b60405180910390f35b3480156104f257600080fd5b5061050d60048036038101906105089190611f42565b6110f8565b005b34801561051b57600080fd5b5061052461110c565b6040516105319190611976565b60405180910390f35b34801561054657600080fd5b5061054f611112565b60405161055c9190611976565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600860009054906101000a900460ff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065a5733600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f1cf993f4000000000000000000000000000000000000000000000000000000008152600401610651929190612012565b60405180910390fd5b61066583838361111f565b505050565b600a60009054906101000a900463ffffffff1681565b7f00000000000000000000000000000000000000000000000000000000000000003410156106da576040517f3038c00a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018111156106ee576106ed611991565b5b600860009054906101000a900460ff1660018111156107105761070f611991565b5b14610747576040517fd24a271400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d460405160405180910390a2565b600061080960405180602001604052806000815250610b53565b5090506000838381019061081d9190612067565b90508161088b5747600780549050600860009054906101000a900460ff16600181111561084d5761084c611991565b5b6040517f584327aa00000000000000000000000000000000000000000000000000000000815260040161088293929190612094565b60405180910390fd5b6001600860006101000a81548160ff021916908360018111156108b1576108b0611991565b5b02179055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639b1c385e6040518060c0016040528060095481526020016004548152602001600361ffff168152602001600a60009054906101000a900463ffffffff1663ffffffff168152602001600a60049054906101000a900463ffffffff1663ffffffff16815260200161097160405180602001604052808815158152506114bb565b8152506040518263ffffffff1660e01b815260040161099091906121e8565b6020604051808303816000875af11580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d3919061221f565b905080600c81905550600b8190806001815401808255809150506001900390600052602060002001600090919091909150556040518060600160405280600015158152602001600115158152602001600067ffffffffffffffff811115610a3d57610a3c611cab565b5b604051908082528060200260200182016040528015610a6b5781602001602082028036833780820191505090505b508152506003600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff0219169083151502179055506040820151816001019080519060200190610ade9291906117f1565b50905050807fcd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b60405160405180910390a25050505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600361ffff16905090565b60095481565b600060606000600860009054906101000a900460ff166001811115610b7b57610b7a611991565b5b60006001811115610b8f57610b8e611991565b5b14905060007f000000000000000000000000000000000000000000000000000000000000000060055442610bc3919061227b565b11905060008060078054905011905060008047119050828015610be35750835b8015610bec5750805b8015610bf55750815b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc29061230c565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600a60049054906101000a900463ffffffff1681565b600b8181548110610df657600080fd5b906000526020600020016000915090505481565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610e41610e10565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610eca5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610f395733610ed8610e10565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f061db9c1000000000000000000000000000000000000000000000000000000008152600401610f309392919061232c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f9f576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be68160405161100f9190611c46565b60405180910390a150565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b6000600554905090565b6000600782815481106110c6576110c5612363565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b611100611553565b611109816115e3565b50565b600c5481565b6000600780549050905090565b6003600084815260200190815260200160002060000160019054906101000a900460ff16611182576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611179906123de565b60405180910390fd5b60016003600085815260200190815260200160002060000160006101000a81548160ff02191690831515021790555081816003600086815260200190815260200160002060010191906111d692919061183e565b506000600c54148061120b575060036000600c54815260200190815260200160002060000160009054906101000a900460ff16155b15611242576040517f46e9e86100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600780805490508484600081811061125f5761125e612363565b5b90506020020135611270919061242d565b8154811061128157611280612363565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008173ffffffffffffffffffffffffffffffffffffffff16476040516113159061248f565b60006040518083038185875af1925050503d8060008114611352576040519150601f19603f3d011682016040523d82523d6000602084013e611357565b606091505b50509050600067ffffffffffffffff81111561137657611375611cab565b5b6040519080825280602002602001820160405280156113a45781602001602082028036833780820191505090505b50600790805190602001906113ba92919061188b565b50600760006113c99190611915565b6000600860006101000a81548160ff021916908360018111156113ef576113ee611991565b5b02179055506114336040518060400160405280601281526020017f57696e6e657220416464726573733a20257300000000000000000000000000008152508361170f565b4260058190555080611471576040517fa1d04b3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df60405160405180910390a25050505050565b60607f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa826040516024016114ef91906124cf565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d890612536565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611651576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611648906125a2565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6117a78282604051602401611725929190612606565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506117ab565b5050565b6117c2816117ba6117c56117e6565b63ffffffff16565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b611936819050919050565b82805482825590600052602060002090810192821561182d579160200282015b8281111561182c578251825591602001919060010190611811565b5b50905061183a9190611940565b5090565b82805482825590600052602060002090810192821561187a579160200282015b8281111561187957823582559160200191906001019061185e565b5b5090506118879190611940565b5090565b828054828255906000526020600020908101928215611904579160200282015b828111156119035782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906118ab565b5b5090506119119190611940565b5090565b50805460008255906000526020600020908101906119339190611940565b50565b61193e612636565b565b5b80821115611959576000816000905550600101611941565b5090565b6000819050919050565b6119708161195d565b82525050565b600060208201905061198b6000830184611967565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106119d1576119d0611991565b5b50565b60008190506119e2826119c0565b919050565b60006119f2826119d4565b9050919050565b611a02816119e7565b82525050565b6000602082019050611a1d60008301846119f9565b92915050565b6000604051905090565b600080fd5b600080fd5b611a408161195d565b8114611a4b57600080fd5b50565b600081359050611a5d81611a37565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611a8857611a87611a63565b5b8235905067ffffffffffffffff811115611aa557611aa4611a68565b5b602083019150836020820283011115611ac157611ac0611a6d565b5b9250929050565b600080600060408486031215611ae157611ae0611a2d565b5b6000611aef86828701611a4e565b935050602084013567ffffffffffffffff811115611b1057611b0f611a32565b5b611b1c86828701611a72565b92509250509250925092565b600063ffffffff82169050919050565b611b4181611b28565b82525050565b6000602082019050611b5c6000830184611b38565b92915050565b60008083601f840112611b7857611b77611a63565b5b8235905067ffffffffffffffff811115611b9557611b94611a68565b5b602083019150836001820283011115611bb157611bb0611a6d565b5b9250929050565b60008060208385031215611bcf57611bce611a2d565b5b600083013567ffffffffffffffff811115611bed57611bec611a32565b5b611bf985828601611b62565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c3082611c05565b9050919050565b611c4081611c25565b82525050565b6000602082019050611c5b6000830184611c37565b92915050565b6000819050919050565b611c7481611c61565b82525050565b6000602082019050611c8f6000830184611c6b565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611ce382611c9a565b810181811067ffffffffffffffff82111715611d0257611d01611cab565b5b80604052505050565b6000611d15611a23565b9050611d218282611cda565b919050565b600067ffffffffffffffff821115611d4157611d40611cab565b5b611d4a82611c9a565b9050602081019050919050565b82818337600083830152505050565b6000611d79611d7484611d26565b611d0b565b905082815260208101848484011115611d9557611d94611c95565b5b611da0848285611d57565b509392505050565b600082601f830112611dbd57611dbc611a63565b5b8135611dcd848260208601611d66565b91505092915050565b600060208284031215611dec57611deb611a2d565b5b600082013567ffffffffffffffff811115611e0a57611e09611a32565b5b611e1684828501611da8565b91505092915050565b60008115159050919050565b611e3481611e1f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e74578082015181840152602081019050611e59565b60008484015250505050565b6000611e8b82611e3a565b611e958185611e45565b9350611ea5818560208601611e56565b611eae81611c9a565b840191505092915050565b6000604082019050611ece6000830185611e2b565b8181036020830152611ee08184611e80565b90509392505050565b600060208284031215611eff57611efe611a2d565b5b6000611f0d84828501611a4e565b91505092915050565b611f1f81611c25565b8114611f2a57600080fd5b50565b600081359050611f3c81611f16565b92915050565b600060208284031215611f5857611f57611a2d565b5b6000611f6684828501611f2d565b91505092915050565b6000819050919050565b6000611f94611f8f611f8a84611c05565b611f6f565b611c05565b9050919050565b6000611fa682611f79565b9050919050565b6000611fb882611f9b565b9050919050565b611fc881611fad565b82525050565b6000602082019050611fe36000830184611fbf565b92915050565b6000604082019050611ffe6000830185611e2b565b61200b6020830184611e2b565b9392505050565b60006040820190506120276000830185611c37565b6120346020830184611c37565b9392505050565b61204481611e1f565b811461204f57600080fd5b50565b6000813590506120618161203b565b92915050565b60006020828403121561207d5761207c611a2d565b5b600061208b84828501612052565b91505092915050565b60006060820190506120a96000830186611967565b6120b66020830185611967565b6120c36040830184611967565b949350505050565b6120d481611c61565b82525050565b6120e38161195d565b82525050565b600061ffff82169050919050565b612100816120e9565b82525050565b61210f81611b28565b82525050565b600082825260208201905092915050565b600061213182611e3a565b61213b8185612115565b935061214b818560208601611e56565b61215481611c9a565b840191505092915050565b600060c08301600083015161217760008601826120cb565b50602083015161218a60208601826120da565b50604083015161219d60408601826120f7565b5060608301516121b06060860182612106565b5060808301516121c36080860182612106565b5060a083015184820360a08601526121db8282612126565b9150508091505092915050565b60006020820190508181036000830152612202818461215f565b905092915050565b60008151905061221981611a37565b92915050565b60006020828403121561223557612234611a2d565b5b60006122438482850161220a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006122868261195d565b91506122918361195d565b92508282039050818111156122a9576122a861224c565b5b92915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006122f66016836122af565b9150612301826122c0565b602082019050919050565b60006020820190508181036000830152612325816122e9565b9050919050565b60006060820190506123416000830186611c37565b61234e6020830185611c37565b61235b6040830184611c37565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f72657175657374206e6f7420666f756e64000000000000000000000000000000600082015250565b60006123c86011836122af565b91506123d382612392565b602082019050919050565b600060208201905081810360008301526123f7816123bb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006124388261195d565b91506124438361195d565b925082612453576124526123fe565b5b828206905092915050565b600081905092915050565b50565b600061247960008361245e565b915061248482612469565b600082019050919050565b600061249a8261246c565b9150819050919050565b6124ad81611e1f565b82525050565b6020820160008201516124c960008501826124a4565b50505050565b60006020820190506124e460008301846124b3565b92915050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006125206016836122af565b915061252b826124ea565b602082019050919050565b6000602082019050818103600083015261254f81612513565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b600061258c6017836122af565b915061259782612556565b602082019050919050565b600060208201905081810360008301526125bb8161257f565b9050919050565b600081519050919050565b60006125d8826125c2565b6125e281856122af565b93506125f2818560208601611e56565b6125fb81611c9a565b840191505092915050565b6000604082019050818103600083015261262081856125cd565b905061262f6020830184611c37565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220692fc57f76a9670d970db9730d7b434342028fa0bec4057b78475bebd577bee064736f6c634300081c0033";

type RaffleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RaffleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Raffle__factory extends ContractFactory {
  constructor(...args: RaffleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    entranceFee: BigNumberish,
    subscriptionId: BigNumberish,
    interval: BigNumberish,
    _vrfCoordinator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      entranceFee,
      subscriptionId,
      interval,
      _vrfCoordinator,
      overrides || {}
    );
  }
  override deploy(
    entranceFee: BigNumberish,
    subscriptionId: BigNumberish,
    interval: BigNumberish,
    _vrfCoordinator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      entranceFee,
      subscriptionId,
      interval,
      _vrfCoordinator,
      overrides || {}
    ) as Promise<
      Raffle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Raffle__factory {
    return super.connect(runner) as Raffle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RaffleInterface {
    return new Interface(_abi) as RaffleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Raffle {
    return new Contract(address, _abi, runner) as unknown as Raffle;
  }
}
